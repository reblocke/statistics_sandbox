lines(x, hx, type = "l", lty = 2,col='gray')
}
hx <- dnorm(x,pooled_bias,pooled_sd)
lines(x,hx,lty=1,col='black')
LOA_l = out[5]
LOA_u = out[6]
LOA_l_CI = out[9]
LOA_u_CI = out[10]
abline(v=c(LOA_l,LOA_u), lty = 2, col = 'black')
abline(v=c(LOA_l_CI, LOA_u_CI), lty=1, col = 'black')
title("Figure: Comparisons within and across studies")
out=loa_maker(ICU$bias,ICU$V_bias,ICU$logs2,ICU$V_logs2)
names(out) <- c("studies","bias","sd","tau2","LOA_L","LOA_U","CI_Lm","CI_Um","CI_Lr","CI_Ur")
out[1:10]
bias=ICU$bias
s2_unb =ICU$S2
pooled_bias = out[2]
pooled_sd = out[3]
pooled_tau2 = out[4]
pooled_sd = sqrt(pooled_sd^2 + pooled_tau2)
x <- seq(-20,20,length=200)
hx <- dnorm(x,bias[1],sd=sqrt(s2_unb[1]))
plot(x, hx, type = "l", lty = 2, col='gray',xlab="Difference between transcutaneous and arterial carbon dioxide (mmHg)",ylab="Density",ylim=c(0,0.2))
for (i in 2:75) {
hx <- dnorm(x,bias[i],sd=sqrt(s2_unb[i]))
lines(x, hx, type = "l", lty = 2,col='gray')
}
hx <- dnorm(x,pooled_bias,pooled_sd)
lines(x,hx,lty=1,col='black')
LOA_l = out[5]
LOA_u = out[6]
LOA_l_CI = out[9]
LOA_u_CI = out[10]
abline(v=c(LOA_l,LOA_u), lty = 2, col = 'black')
abline(v=c(LOA_l_CI, LOA_u_CI), lty=1, col = 'black')
title("Figure: Comparisons within and across studies")
out=loa_maker(ARF$bias,ARF$V_bias,ARF$logs2,ARF$V_logs2)
names(out) <- c("studies","bias","sd","tau2","LOA_L","LOA_U","CI_Lm","CI_Um","CI_Lr","CI_Ur")
out[1:10]
bias=ARF$bias
s2_unb =ARF$S2
pooled_bias = out[2]
pooled_sd = out[3]
pooled_tau2 = out[4]
pooled_sd = sqrt(pooled_sd^2 + pooled_tau2)
x <- seq(-20,20,length=200)
hx <- dnorm(x,bias[1],sd=sqrt(s2_unb[1]))
plot(x, hx, type = "l", lty = 2, col='gray',xlab="Difference between transcutaneous and arterial carbon dioxide (mmHg)",ylab="Density",ylim=c(0,0.2))
for (i in 2:75) {
hx <- dnorm(x,bias[i],sd=sqrt(s2_unb[i]))
lines(x, hx, type = "l", lty = 2,col='gray')
}
hx <- dnorm(x,pooled_bias,pooled_sd)
lines(x,hx,lty=1,col='black')
LOA_l = out[5]
LOA_u = out[6]
LOA_l_CI = out[9]
LOA_u_CI = out[10]
abline(v=c(LOA_l,LOA_u), lty = 2, col = 'black')
abline(v=c(LOA_l_CI, LOA_u_CI), lty=1, col = 'black')
title("Figure: Comparisons within and across studies")
out=loa_maker(OLV$bias,OLV$V_bias,OLV$logs2,OLV$V_logs2)
names(out) <- c("studies","bias","sd","tau2","LOA_L","LOA_U","CI_Lm","CI_Um","CI_Lr","CI_Ur")
out[1:10]
bias=OLV$bias
s2_unb =OLV$S2
pooled_bias = out[2]
pooled_sd = out[3]
pooled_tau2 = out[4]
pooled_sd = sqrt(pooled_sd^2 + pooled_tau2)
x <- seq(-20,20,length=200)
hx <- dnorm(x,bias[1],sd=sqrt(s2_unb[1]))
plot(x, hx, type = "l", lty = 2, col='gray',xlab="Difference between transcutaneous and arterial carbon dioxide (mmHg)",ylab="Density",ylim=c(0,0.2))
for (i in 2:75) {
hx <- dnorm(x,bias[i],sd=sqrt(s2_unb[i]))
lines(x, hx, type = "l", lty = 2,col='gray')
}
hx <- dnorm(x,pooled_bias,pooled_sd)
lines(x,hx,lty=1,col='black')
LOA_l = out[5]
LOA_u = out[6]
LOA_l_CI = out[9]
LOA_u_CI = out[10]
abline(v=c(LOA_l,LOA_u), lty = 2, col = 'black')
abline(v=c(LOA_l_CI, LOA_u_CI), lty=1, col = 'black')
title("Figure: Comparisons within and across studies")
out=loa_maker(CRF$bias,CRF$V_bias,CRF$logs2,CRF$V_logs2)
names(out) <- c("studies","bias","sd","tau2","LOA_L","LOA_U","CI_Lm","CI_Um","CI_Lr","CI_Ur")
out[1:10]
bias=CRF$bias
s2_unb =CRF$S2
pooled_bias = out[2]
pooled_sd = out[3]
pooled_tau2 = out[4]
pooled_sd = sqrt(pooled_sd^2 + pooled_tau2)
x <- seq(-20,20,length=200)
hx <- dnorm(x,bias[1],sd=sqrt(s2_unb[1]))
plot(x, hx, type = "l", lty = 2, col='gray',xlab="Difference between transcutaneous and arterial carbon dioxide (mmHg)",ylab="Density",ylim=c(0,0.2))
for (i in 2:75) {
hx <- dnorm(x,bias[i],sd=sqrt(s2_unb[i]))
lines(x, hx, type = "l", lty = 2,col='gray')
}
hx <- dnorm(x,pooled_bias,pooled_sd)
lines(x,hx,lty=1,col='black')
LOA_l = out[5]
LOA_u = out[6]
LOA_l_CI = out[9]
LOA_u_CI = out[10]
abline(v=c(LOA_l,LOA_u), lty = 2, col = 'black')
abline(v=c(LOA_l_CI, LOA_u_CI), lty=1, col = 'black')
title("Figure: Comparisons within and across studies")
out=loa_maker(sentec$bias,sentec$V_bias,sentec$logs2,sentec$V_logs2)
names(out) <- c("studies","bias","sd","tau2","LOA_L","LOA_U","CI_Lm","CI_Um","CI_Lr","CI_Ur")
out[1:10]
bias=sentec$bias
s2_unb =sentec$S2
pooled_bias = out[2]
pooled_sd = out[3]
pooled_tau2 = out[4]
pooled_sd = sqrt(pooled_sd^2 + pooled_tau2)
x <- seq(-20,20,length=200)
hx <- dnorm(x,bias[1],sd=sqrt(s2_unb[1]))
plot(x, hx, type = "l", lty = 2, col='gray',xlab="Difference between transcutaneous and arterial carbon dioxide (mmHg)",ylab="Density",ylim=c(0,0.2))
for (i in 2:length(bias)) {
hx <- dnorm(x,bias[i],sd=sqrt(s2_unb[i]))
lines(x, hx, type = "l", lty = 2,col='gray')
}
hx <- dnorm(x,pooled_bias,pooled_sd)
lines(x,hx,lty=1,col='black')
LOA_l = out[5]
LOA_u = out[6]
LOA_l_CI = out[9]
LOA_u_CI = out[10]
abline(v=c(LOA_l,LOA_u), lty = 2, col = 'black')
abline(v=c(LOA_l_CI, LOA_u_CI), lty=1, col = 'black')
title("Figure: Comparisons within and across studies")
#| echo: false
library(consort)
library(tidyverse)
library(medicaldata)
library(haven)
library(dplyr)
library(rsvg)
library(DiagrammeRsvg)
library(magick)
library(DiagrammeR)
library(rsvg)
licodata = medicaldata::licorice_gargle %>%
rowid_to_column("patient_id") %>%
# make treatment var from 0,1 to factor
mutate(randomisation = treat %>%
factor() %>%
fct_recode("Sugar"    = "0",
"Licorice" = "1")) %>%
# assess eligigibility
mutate(eligibility = case_when(preOp_age > 70 ~ "Age 70+",
! between(preOp_calcBMI, 18.5, 30) ~ "BMI not 18.5 - 30",
.default = NA),
# randomly generate intervention failed and lost to follow up variables
intervention = sample(c("Did not receive intervention", "Withdrew consent",NA),
size = 235,
replace = TRUE,
prob = c(0.1, 0.1, 0.9)),
followup = sample(c("Died", "Refused Assessment", NA),
size = 235,
replace = TRUE,
prob = c(0.1, 0.2, 0.7))) %>%
mutate(randomisation = if_else(is.na(eligibility), randomisation, NA)) %>%
mutate(intervention = if_else(is.na(eligibility), intervention, NA)) %>%
mutate(followup = if_else(is.na(intervention), followup, NA))
p_cons = consort_plot(licodata,
order = list(patient_id    = "Population",
eligibility   = "Excluded",
randomisation = "Randomised",
intervention  = "Excluded",
patient_id    = "Received treatment",
followup      = "Lost to follow-up",
patient_id    = "Final analysis"),
side_box = c("eligibility", "intervention", "followup"),
allocation = "randomisation",
cex = 0.8,
text_width = 30)
p_cons
### ** Examples
## Prepare test data
set.seed(1001)
N <- 300
trialno <- sample(c(1000:2000), N)
exc1 <- rep(NA, N)
exc1[sample(1:N, 15)] <- sample(c("Sample not collected", "MRI not collected", "Other"),
15,
replace = TRUE, prob = c(0.4, 0.4, 0.2)
)
induc <- rep(NA, N)
induc[is.na(exc1)] <- trialno[is.na(exc1)]
exc2 <- rep(NA, N)
exc2[sample(1:N, 20)] <- sample(c(
"Sample not collected", "Dead",
"Other"
), 20,
replace = TRUE,
prob = c(0.4, 0.4, 0.2)
)
exc2[is.na(induc)] <- NA
exc <- ifelse(is.na(exc2), exc1, exc2)
arm <- rep(NA, N)
arm[is.na(exc)] <- sample(c("Conc", "Seq"), sum(is.na(exc)), replace = TRUE)
arm3 <- sample(c("Trt A", "Trt B", "Trt C"), N, replace = TRUE)
arm3[is.na(arm)] <- NA
fow1 <- rep(NA, N)
fow1[!is.na(arm)] <- sample(c("Withdraw", "Discontinued", "Death", "Other", NA),
sum(!is.na(arm)),
replace = TRUE,
prob = c(0.05, 0.05, 0.05, 0.05, 0.8)
)
fow2 <- rep(NA, N)
fow2[!is.na(arm) & is.na(fow1)] <- sample(c("Protocol deviation", "Outcome missing", NA),
sum(!is.na(arm) & is.na(fow1)),
replace = TRUE,
prob = c(0.05, 0.05, 0.9)
)
df <- data.frame(trialno, exc1, induc, exc2, exc, arm, arm3, fow1, fow2)
rm(trialno, exc1, induc, exc2, exc, arm, arm3, fow1, fow2, N)
## Multiple phase
p <- consort_plot(
data = df,
order = list(
trialno = "Population",
exc1 = "Excluded",
induc = "Induction",
exc2 = "Excluded",
arm3 = "Randomized patient",
fow1 = "Lost of Follow-up",
trialno = "Finished Followup",
fow2 = "Not evaluable",
trialno = "Final Analysis"
),
side_box = c("exc1", "exc2", "fow1", "fow2"),
allocation = "arm3",
labels = c(
"1" = "Screening", "2" = "Month 4",
"3" = "Randomization", "5" = "Month 24",
"6" = "End of study"
),
cex = 0.7
)
p
library(haven)
library(dplyr)
# Read in the stata dataframe and apply the factor labels.
bicarb_paper_data <- read_dta('/Users/blocke/Box Sync/Residency Personal Files/Scholarly Work/Locke Research Projects/TriNetX Code/Data/full_db_for_consort.dta') %>%
mutate(across(everything(), ~as_factor(.x, levels = "labels"))) %>%
rowid_to_column("patient_id")
bicarb_paper_data <- bicarb_paper_data %>%
mutate(exclusion_1 = case_when(
!is.na(subsequent_encounter) ~ as.character(subsequent_encounter),
!is.na(failed_data_check) ~ as.character(failed_data_check),
TRUE ~ NA_character_
))
p_cons = consort_plot(bicarb_paper_data,
order = list(encounter_type = "Patients with a reason to suspect Hypercapnia*",
exclusion_1 = "Excluded",
patient_id = "Included",
no_abg = "Incomplete Outcome Data",
patient_id = "Analyzed"),
side_box = c("exclusion_1", "no_abg"),
allocation = "encounter_type",
cex = 0.7,
text_width = 25)
p_cons
abg_vbg_paper_data <- bicarb_paper_data %>%
filter(is.na(not_inp))
p_cons = consort_plot(abg_vbg_paper_data,
order = list(patient_id    = "Inpatients with a reason to suspect Hypercapnia*",
exclusion_1 = "Excluded",
abg_vbg = "Day 0 Blood Gasses Obtained",
patient_id = "Analyzed"),
side_box = c("exclusion_1"),
allocation = "abg_vbg",
cex = 0.8,
text_width = 30)
p_cons
#| echo: false
library(consort)
library(tidyverse)
library(medicaldata)
library(haven)
library(dplyr)
library(rsvg)
library(DiagrammeRsvg)
library(magick)
library(DiagrammeR)
library(rsvg)
licodata = medicaldata::licorice_gargle %>%
rowid_to_column("patient_id") %>%
# make treatment var from 0,1 to factor
mutate(randomisation = treat %>%
factor() %>%
fct_recode("Sugar"    = "0",
"Licorice" = "1")) %>%
# assess eligigibility
mutate(eligibility = case_when(preOp_age > 70 ~ "Age 70+",
! between(preOp_calcBMI, 18.5, 30) ~ "BMI not 18.5 - 30",
.default = NA),
# randomly generate intervention failed and lost to follow up variables
intervention = sample(c("Did not receive intervention", "Withdrew consent",NA),
size = 235,
replace = TRUE,
prob = c(0.1, 0.1, 0.9)),
followup = sample(c("Died", "Refused Assessment", NA),
size = 235,
replace = TRUE,
prob = c(0.1, 0.2, 0.7))) %>%
mutate(randomisation = if_else(is.na(eligibility), randomisation, NA)) %>%
mutate(intervention = if_else(is.na(eligibility), intervention, NA)) %>%
mutate(followup = if_else(is.na(intervention), followup, NA))
p_cons = consort_plot(licodata,
order = list(patient_id    = "Population",
eligibility   = "Excluded",
randomisation = "Randomised",
intervention  = "Excluded",
patient_id    = "Received treatment",
followup      = "Lost to follow-up",
patient_id    = "Final analysis"),
side_box = c("eligibility", "intervention", "followup"),
allocation = "randomisation",
cex = 0.8,
text_width = 30)
p_cons
### ** Examples
## Prepare test data
set.seed(1001)
N <- 300
trialno <- sample(c(1000:2000), N)
exc1 <- rep(NA, N)
exc1[sample(1:N, 15)] <- sample(c("Sample not collected", "MRI not collected", "Other"),
15,
replace = TRUE, prob = c(0.4, 0.4, 0.2)
)
induc <- rep(NA, N)
induc[is.na(exc1)] <- trialno[is.na(exc1)]
exc2 <- rep(NA, N)
exc2[sample(1:N, 20)] <- sample(c(
"Sample not collected", "Dead",
"Other"
), 20,
replace = TRUE,
prob = c(0.4, 0.4, 0.2)
)
exc2[is.na(induc)] <- NA
exc <- ifelse(is.na(exc2), exc1, exc2)
arm <- rep(NA, N)
arm[is.na(exc)] <- sample(c("Conc", "Seq"), sum(is.na(exc)), replace = TRUE)
arm3 <- sample(c("Trt A", "Trt B", "Trt C"), N, replace = TRUE)
arm3[is.na(arm)] <- NA
fow1 <- rep(NA, N)
fow1[!is.na(arm)] <- sample(c("Withdraw", "Discontinued", "Death", "Other", NA),
sum(!is.na(arm)),
replace = TRUE,
prob = c(0.05, 0.05, 0.05, 0.05, 0.8)
)
fow2 <- rep(NA, N)
fow2[!is.na(arm) & is.na(fow1)] <- sample(c("Protocol deviation", "Outcome missing", NA),
sum(!is.na(arm) & is.na(fow1)),
replace = TRUE,
prob = c(0.05, 0.05, 0.9)
)
df <- data.frame(trialno, exc1, induc, exc2, exc, arm, arm3, fow1, fow2)
rm(trialno, exc1, induc, exc2, exc, arm, arm3, fow1, fow2, N)
## Multiple phase
p <- consort_plot(
data = df,
order = list(
trialno = "Population",
exc1 = "Excluded",
induc = "Induction",
exc2 = "Excluded",
arm3 = "Randomized patient",
fow1 = "Lost of Follow-up",
trialno = "Finished Followup",
fow2 = "Not evaluable",
trialno = "Final Analysis"
),
side_box = c("exc1", "exc2", "fow1", "fow2"),
allocation = "arm3",
labels = c(
"1" = "Screening", "2" = "Month 4",
"3" = "Randomization", "5" = "Month 24",
"6" = "End of study"
),
cex = 0.7
)
p
library(haven)
library(dplyr)
# Read in the stata dataframe and apply the factor labels.
bicarb_paper_data <- read_dta('/Users/blocke/Box Sync/Residency Personal Files/Scholarly Work/Locke Research Projects/TriNetX Code/Data/full_db_for_consort.dta') %>%
mutate(across(everything(), ~as_factor(.x, levels = "labels"))) %>%
rowid_to_column("patient_id")
bicarb_paper_data <- bicarb_paper_data %>%
mutate(exclusion_1 = case_when(
!is.na(subsequent_encounter) ~ as.character(subsequent_encounter),
!is.na(failed_data_check) ~ as.character(failed_data_check),
TRUE ~ NA_character_
))
p_cons = consort_plot(bicarb_paper_data,
order = list(encounter_type = "Patients with a reason to suspect Hypercapnia*",
exclusion_1 = "Excluded",
patient_id = "Included",
no_abg = "Incomplete Outcome Data",
patient_id = "Analyzed"),
side_box = c("exclusion_1", "no_abg"),
allocation = "encounter_type",
cex = 0.7,
text_width = 25)
p_cons
abg_vbg_paper_data <- bicarb_paper_data %>%
filter(is.na(not_inp))
p_cons = consort_plot(abg_vbg_paper_data,
order = list(patient_id    = "Inpatients with a reason to suspect Hypercapnia*",
exclusion_1 = "Excluded",
abg_vbg = "Day 0 Blood Gasses Obtained",
patient_id = "Analyzed"),
side_box = c("exclusion_1"),
allocation = "abg_vbg",
cex = 0.8,
text_width = 30)
p_cons
comp_phen_paper_data <- bicarb_paper_data %>%
filter(encounter_type != "Ambulatory Encounter")
# Replace either ABG/VBG with NA so this can be used as a filter
comp_phen_paper_data <- comp_phen_paper_data %>%
mutate(has_neither_abg_vbg = if_else(has_neither_abg_vbg == "Either ABG or VBG Obtained",
NA_character_,
as.character(has_neither_abg_vbg)))
# Change Label Wording
comp_phen_paper_data <- comp_phen_paper_data %>%
mutate(
has_neither_abg_vbg = ifelse(has_neither_abg_vbg == "Neither ABG or VBG Obtained (first day)",  "Neither ABG or VBG Obtained on First Day", has_neither_abg_vbg),
no_abg = ifelse(no_abg == "Did Not Receive Day 0 ABG", "No ABG Obtained on First Day",   no_abg))
p_cons = consort_plot(comp_phen_paper_data,
order = list(patient_id    = "Enriched Sample of Emergency and Inpatient Encounters in 2022",
exclusion_1 = "Excluded",
patient_id = "Included in Analysis of Case Definition Overlap",
has_neither_abg_vbg = "Excluded",
patient_id = "Included in Supplementary Analyses",
no_abg = "Excluded",
patient_id = "Included in Primary Analysis"),
side_box = c("exclusion_1", "has_neither_abg_vbg", "no_abg"),
cex = 0.9,
text_width = 40)
p_cons
plot(p_cons, grViz = TRUE) |>
DiagrammeRsvg::export_svg() |>
charToRaw() |>
rsvg::rsvg_svg(file = "/Users/blocke/Box Sync/Residency Personal Files/Scholarly Work/Locke Research Projects/TriNetX Code/Subprojects/Computable Phenotype/Drafts/FIgures/consort.svg")
# Assuming p_cons is your DiagrammeR graph object
svg_content <- plot(p_cons, grViz = TRUE) %>%
DiagrammeRsvg::export_svg()
# Convert SVG content to PNG and save to file
rsvg::rsvg_png(svg = charToRaw(svg_content),
file = "/Users/blocke/Box Sync/Residency Personal Files/Scholarly Work/Locke Research Projects/TriNetX Code/Subprojects/Computable Phenotype/Drafts/FIgures/consort.png", width = 1000, height=800)
diagnostic_model_data <- bicarb_paper_data %>% filter(is.na(not_inp))
# Replace either ABG/VBG with NA so this can be used as a filter
diagnostic_model_data <- diagnostic_model_data %>%
mutate(has_neither_abg_vbg = if_else(has_neither_abg_vbg == "Either ABG or VBG Obtained",
NA_character_,
as.character(has_neither_abg_vbg)))
# Convert labels to lowercase and then capitalize the first letter
diagnostic_model_data$exclusion_1 <- sub("^(.)", "\\U\\1", tolower(diagnostic_model_data$exclusion_1), perl=TRUE)
diagnostic_model_data$has_neither_abg_vbg <- sub("^(.)", "\\U\\1", tolower(diagnostic_model_data$has_neither_abg_vbg), perl=TRUE)
diagnostic_model_data$no_abg <- sub("^(.)", "\\U\\1", tolower(diagnostic_model_data$no_abg), perl=TRUE)
# Convert every occurrence of 'abg' to 'ABG' and 'vbg' to 'VBG' in the specified variables
diagnostic_model_data$has_neither_abg_vbg <- gsub("abg", "ABG", diagnostic_model_data$has_neither_abg_vbg, ignore.case = TRUE)
diagnostic_model_data$has_neither_abg_vbg <- gsub("vbg", "VBG", diagnostic_model_data$has_neither_abg_vbg, ignore.case = TRUE)
diagnostic_model_data$no_abg <- gsub("abg", "ABG", diagnostic_model_data$no_abg, ignore.case = TRUE)
diagnostic_model_data$no_abg <- gsub("vbg", "VBG", diagnostic_model_data$no_abg, ignore.case = TRUE)
# Convert specific value labels in 'no_abg'
diagnostic_model_data$no_abg <- ifelse(diagnostic_model_data$no_abg == "Did not receive day 0 ABG",
"Received only a VBG but no ABG on the first day",
diagnostic_model_data$no_abg)
# Convert specific value labels in 'has_neither_abg_vbg'
diagnostic_model_data$has_neither_abg_vbg <- ifelse(diagnostic_model_data$has_neither_abg_vbg == "Neither ABG or VBG obtained (first day)",
"Received neither an ABG nor a VBG on the first day",
diagnostic_model_data$has_neither_abg_vbg)
p_cons = consort_plot(diagnostic_model_data,
order = list(patient_id    = "Inpatient encounters in 2022 with a reason to suspect hypercapnia",
exclusion_1 = "Excluded",
patient_id = "Target sample for the inverse propensity weighting analysis",
has_neither_abg_vbg = "Excluded",
patient_id = "Included in the silver standard analysis",
no_abg = "Excluded",
patient_id = "Included in the training dataset and the primary analysis"),
side_box = c("exclusion_1", "has_neither_abg_vbg", "no_abg"),
cex = 0.9,
text_width = 40)
p_cons
plot(p_cons, grViz = TRUE) |>
DiagrammeRsvg::export_svg() |>
charToRaw() |>
rsvg::rsvg_svg(file = "/Users/blocke/Box Sync/Residency Personal Files/Scholarly Work/Locke Research Projects/TriNetX Code/Subprojects/Diagnostic Model/Figures and Tables/consort.svg")
# Assuming p_cons is your DiagrammeR graph object
svg_content <- plot(p_cons, grViz = TRUE) %>%
DiagrammeRsvg::export_svg()
# Convert SVG content to PNG and save to file
rsvg::rsvg_png(svg = charToRaw(svg_content),
file = "/Users/blocke/Box Sync/Residency Personal Files/Scholarly Work/Locke Research Projects/TriNetX Code/Subprojects/Diagnostic Model/Figures and Tables/consort.png", width = 1000, height=1200)
# Code to use magick to designate DPI at 300
#image <- image_read("/Users/blocke/Box Sync/Residency Personal Files/Scholarly Work/Locke Research Projects/VR in ICU/Data/consort.png" )
#image_write(image, path = "/Users/blocke/Box Sync/Residency Personal Files/Scholarly Work/Locke Research Projects/VR in ICU/Data/consort_dpi300.png", density = 300)
View(bicarb_paper_data)
View(bicarb_paper_data)
